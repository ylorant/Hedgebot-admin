# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    app.upload_directory: '%kernel.project_dir%/public/upload/'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.
        bind:
            $layoutPath: '%kernel.project_dir%/config/layouts.yaml'
            $apiConfigPath: '%kernel.project_dir%/config/hedgebot.yaml'
            $apiBaseUrl: '%env(resolve:HEDGEBOT_API_URI)%'
            $apiAccessToken: '%env(HEDGEBOT_API_TOKEN)%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude: '../src/{DependencyInjection,Entity,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    hedgebot_api:
        class: App\Service\ApiClientService

    plugin_routing_loader:
        class: App\Routing\ModuleRouteLoader
        arguments: [ '@kernel', '%kernel.bundles%' ]
        tags:
            - { name: routing.loader }

    plugin_public_routing_loader:
        class: App\Routing\ModulePublicRouteLoader
        arguments: [ '@kernel', '%kernel.bundles%' ]
        tags:
            - { name: routing.loader }

    plugin_discoverer:
        class: App\Service\ModuleDiscovererService
        arguments: [ '@hedgebot_api' ]
        calls:
            - [ setContainer,[ '@service_container' ] ]
        tags:
            - { name: kernel.event_listener, event: security.interactive_login, method: onLoginSuccess }
            - { name: kernel.event_listener, event: kernel.terminate, method: onKernelTerminate }

    menu_generator:
        class: App\Service\MenuGeneratorService
        arguments: [ '@kernel', '@translator' ]
        calls:
            - [ setContainer,[ '@service_container' ] ]

    dashboard_widgets:
        class: App\Service\DashboardWidgetsManagerService
        arguments: ['@kernel', '@hedgebot_api', '@file_locator']
        calls:
            - [ setContainer,[ '@service_container' ] ]

    twitch_client:
        class: App\Service\TwitchClientService
        arguments: [ '@router', 'twitch_oauth_redirect' ]
        calls:
            - [ setScope, [ ['channel_editor', 'channel_commercial', 'channel_read', 'user_read', 'user:edit:broadcast'] ] ]
            - [ initFromHedgebotApiClient, ['@hedgebot_api'] ]

    controller_hooks:
        class: App\EventSubscriber\ControllerHooksSubscriber
        tags:
            - { name: kernel.event_subscriber }

    forwarded_trust:
        class: App\EventSubscriber\ForwardedTrustSubscriber
        tags:
            - { name: kernel.event_subscriber }
